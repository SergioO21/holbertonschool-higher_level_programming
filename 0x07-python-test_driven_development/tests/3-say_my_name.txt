===============================================================================

████████╗███████╗███████╗████████╗     ██████╗ █████╗ ███████╗███████╗███████╗
╚══██╔══╝██╔════╝██╔════╝╚══██╔══╝    ██╔════╝██╔══██╗██╔════╝██╔════╝██╔════╝
   ██║   █████╗  ███████╗   ██║       ██║     ███████║███████╗█████╗  ███████╗
   ██║   ██╔══╝  ╚════██║   ██║       ██║     ██╔══██║╚════██║██╔══╝  ╚════██║
   ██║   ███████╗███████║   ██║       ╚██████╗██║  ██║███████║███████╗███████║
   ╚═╝   ╚══════╝╚══════╝   ╚═╝        ╚═════╝╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝
                                                                              
===============================================================================

	---------- Importing the ``say_my_name`` function ----------
	>>> say_my_name = __import__('3-say_my_name').say_my_name

==================== Principal requirements checkers ====================


	---------- Check that the file is executable ----------
	>>> import os
	>>> os.access('3-say_my_name.py', os.X_OK)
	True

	---------- Check for the documentation of the module ----------
	>>> len(__import__("3-say_my_name").__doc__) > 10
	True

	---------- Check for the documentation of the function ----------
	>>> len(__import__("3-say_my_name").say_my_name.__doc__) > 10
	True

	---------- Check for pep8 style ----------
	>>> os.popen("pep8 3-say_my_name.py").read()
	''

	---------- Check for a newline at the end of the file ----------
	>>> os.popen("cat -e 3-say_my_name.py | tail -1").read()[-1]
	'\n'

	---------- Check for the file has a shebang ----------
	>>> os.popen("cat 3-say_my_name.py | head -1").read()
	'#!/usr/bin/python3\n'

	---------- Check that the README file exists ----------
	>>> cwd = os.getcwd()
	>>> check_readme = cwd + '/README.md'
	>>> os.path.exists(check_readme)
	True


==================== Correct operation of the program ====================


	>>> say_my_name("Daniel", "Ramirez")
	My name is Daniel Ramirez


	>>> say_my_name("Carlos", "Paez")
	My name is Carlos Paez


	>>> say_my_name("Vannesa", "")
	My name is Vannesa 

==================== Testing with no arguments ====================


	>>> say_my_name(None, None)
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string


	>>> say_my_name(None, "Perez")
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string


	>>> say_my_name("Carolina")
	My name is Carolina 


==================== Testing with any type of data ====================


	>>> say_my_name("Antonio", 5)
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string


	>>> say_my_name(10, "Ruiz")
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string


	>>> say_my_name("Alberto", {"Adalberto": "Pinedo", "Samantha": "Polo"})
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string


	>>> say_my_name(("Maria", "Sara"), "Perez")
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string


	>>> say_my_name("Luis", ["Rueda", "Lindo", "Paris"])
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string

